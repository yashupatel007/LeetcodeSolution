class Solution {
public:
    int trap(vector<int>& height) {
          int n=height.size();
  
  int m=0;
  int water=0;
  // calculate max in the array
  for(int i=0;i<n;i++){
      if(height[i]>height[m])
        m=i;

  }
 // for left array
 int leftmax=height[0];
 for(int j=0;j<m;j++){
  leftmax=max(leftmax,height[j]);
  if(leftmax-height[j]>=0){
     water+=(leftmax-height[j]);
  }
 }
 // for right array
 int rightmax=height[n-1];
 for(int k=n-1;k>m;k--){
  rightmax=max(rightmax,height[k]);
  if(rightmax-height[k]>=0){
    water+=(rightmax-height[k]);
  }
 }

 return water;
    }
};
